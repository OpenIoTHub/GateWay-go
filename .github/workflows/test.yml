name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20
      - name: Test golang code
        run: go test ./...
      - name: Build golang code
        run: go build
  linux-android-windows-libs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25c
          add-to-path: true
      - name: Install requirement
        run: sudo apt-get update && sudo apt-get install gcc-aarch64-linux-gnu binutils-mingw-w64 gcc-mingw-w64-x86-64 -y
      - name: Test golang code
        run: go test ./...
      - name: Build linux libs
        run: ./lib/buildso.sh
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: Build windows libs
        run: ./lib/builddll.sh
      - uses: actions/upload-artifact@v3
        with:
          name: linux-libs
          path: build/linux
#      - uses: actions/upload-artifact@v3
#        with:
#          name: android-libs
#          path: build/android
      - uses: actions/upload-artifact@v3
        with:
          name: windows-libs
          path: build/windows
  macos-iOS-libs:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20
      - name: Test golang code
        run: go test ./...
      - name: Build libs
        run: ./lib/builddylib.sh
      - uses: actions/upload-artifact@v3
        with:
          name: macos-libs
          path: build/macos
      - uses: actions/upload-artifact@v3
        with:
          name: ios-libs
          path: build/ios
  gomobile-libs:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26b
      - run: ls ~/Library/Android/sdk/ndk
      - run: echo $ANDROID_NDK_HOME
      - name: Test golang code
        run: go test ./...
      - name: install and setup gomobile
        run: |
          go install golang.org/x/mobile/cmd/gobind@latest
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          gomobile version
          gomobile clean
        env:
          GO111MODULE: on
          ANDROID_NDK_HOME: ~/Library/Android/sdk/ndk/26.0.10792818
      - name: build ios xcframework
        run: gomobile bind -ldflags '-w -s -extldflags "-lresolve"' --target=ios,macos,iossimulator -o OpenIoTHubGateway.xcframework ./client
      - uses: actions/upload-artifact@v3
        with:
          name: ios-macos-xcframework-libs
          path: OpenIoTHubGateway.xcframework
      - name: build android aar
        run: gomobile bind -target=android  -o gateway.aar ./client
        env:
          ANDROID_NDK_HOME: ~/Library/Android/sdk/ndk/26.0.10792818
      - uses: actions/upload-artifact@v3
        with:
          name: android-aar-libs
          path: gateway.aar