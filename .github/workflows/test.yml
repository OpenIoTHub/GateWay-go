name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - name: Test golang code
        run: go test ./...
      - name: Build golang code
        run: go build
  linux-android-windows-libs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25c
          add-to-path: true
      - name: Install requirement
        run: sudo apt-get update && sudo apt-get install gcc-aarch64-linux-gnu binutils-mingw-w64 gcc-mingw-w64-x86-64 -y
      - name: Test golang code
        run: go test ./...
      - name: Build linux libs
        run: ./lib/buildso.sh
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: Build windows libs
        run: ./lib/builddll.sh
      - name: mkdir
        run: mkdir artifacts
      - name: Zip Linux libs
        run: cd build && zip -r ../artifacts/linux-libs-build.zip ./linux
      - name: Zip Android libs
        run: cd build && zip -r ../artifacts/android-libs-build.zip ./android
      - name: Zip Windows libs
        run: cd build && zip -r ../artifacts/windows-libs-build.zip ./windows
      - uses: actions/upload-artifact@v2
        with:
          name: libs
          path: ./artifacts/**/*
  macos-iOS-libs:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.20
      - name: Test golang code
        run: go test ./...
      - name: Build libs
        run: ./lib/builddylib.sh
      - name: mkdir
        run: mkdir artifacts
      - name: Zip MacOS libs
        run: cd build && zip -r ../artifacts/macos-libs-build.zip ./macos
      - name: Zip iOS libs
        run: cd build && zip -r ../artifacts/ios-libs-build.zip ./ios
      - uses: actions/upload-artifact@v2
        with:
          name: libs
          path: ./artifacts/**/*